#! /usr/bin/perl -w

# DGS Robot: A robot skeleton for dragongoserver.net
# Copyright (C) 2006-2015  Yves Rutschle
#
# This program is free software; you can redistribute it
# and/or modify it under the terms of the GNU General Public
# License as published by the Free Software Foundation;
# either
# version 2 of the License, or (at your option) any later
# version.
# 
# This program is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
# PURPOSE.  See the GNU General Public License for more
# details.
# 
# The full text for the General Public License is here:
# http://www.gnu.org/licenses/gpl.html


use strict;

use DGSQBot;

my $bot = new DGSQBot(
    name => "GnuGo",

    verbose => 1,
    dont_move => 0,

    logging => 1,

    sgffile => "/tmp/qsgf",
    sgfout => "/tmp/qout.sgf",
    finished_games => "qfinished.lst",
    error_games => "qerror.lst",
    logfile => "qrobot.log",
    throttle_file => "/tmp/qrobot.throttle",

    pidfile=> "/tmp/qrobot.pid",

    login=>'whiterobot', 
    passwd=>`cat passwd.qrobot`,  # Retrieve password from external file; password can also just be set here.
    cookies => "$ENV{HOME}/.qrobot.cookies",

    gtp_engine => "/usr/games/gnugo --mode gtp",

    # board_ok a callback to check the board size is
    # acceptable for this robot. if it isn't, the invite is
    # rejected with the  badsize_msg.
    # It must return 1 to accept the invite, 0 otherwise.
    board_ok => sub { 
        ($_[0]->opp_started_games <= 5) and ($_[0]->boardsize >= 13) and ($_[0]->boardsize <= 19) or  not $_[0]->rated
    },
    badsize_msg => "I am sorry, I only play board sizes 13 to 19, and no more than 5 games per user at a time. If you want to play smaller than 13, I'll only accept a non-rated game.",

    # pre_run is called after loading the sgf, before 
    # computing the move.
    pre_run => sub {},
);

die "Error starting the engine\n" unless defined $bot;

$bot->do_everything;

